name: Build Docker image

# Trigger definition
# example on all pushes
# on: [push]
# example on a specific push
# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]
# example on schedule
# on:
#  schedule:
#    - cron: '*/5 * * * *'
on: [push]

# Environment variables definition
# Some specific variables exist
# ${{ github.repository }}
# ${{ github.actor }}
# ${{ secrets.GHCR_TOKEN }}
# And later these variables can be called
# ${{ env.IMAGE_NAME }}
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# Jobs definition
jobs:
  build-and-push-image:
    # Runner image for processing
    runs-on: ubuntu-latest

    # Adjust permissions granted to the GITHUB_TOKEN
    permissions:
      contents: read
      packages: write

    # Steps for the job
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      # Installs QEMU static binaries.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      # Creates and boots a builder that can be used in the following steps.
      # (Buildx or the build-push actions)
      # By default, the docker-container driver will be used to be able to
      # build multi-platform images and export cache using a BuildKit container.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      # Logins against a Docker registry.
      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      # Extract metadata from Git reference and GitHub events.
      # Used to tag and label Docker image
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          # image name format
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # labels:
          # Specify static additional labels
          labels: |
            com.antrema.maintainer=antrema
          # tags: 
          # type=schedule
          # on schedule events
          # Default: tags: 'nightly'
          # type=ref
          # on branch/tag/pr events
          # Default: branch/tag/pr
          # type=semver
          # on push tag event
          # with valid semver: v(major).(minor).(patch)
          # Default: {{version}}
          # type=sha
          # on all events
          # Default: sha
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD-HHmmss' tz='Europe/Paris'}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      # Builds and pushes Docker images
      - name: Build and push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
